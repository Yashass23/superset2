#!/bin/bash

# Setting Time Limit (48 hours in seconds)
time_limit=$((48 * 60 * 60))

# Function to send team message
send_team_message() {
    local pid=$1
    local userid=$2
    local DATE=$(date "+DATE: %d/%m/%y TIME: %H:%M:%S")
    local Title="ALERT FROM $HOSTNAME"
    local header="Content-Type: application/json"
    local nav_slack_hook="https://prod-63.westus.logic.azure.com:443/workflows/2f13c0b9.../triggers/manual/paths/invoke?api-version=2016-06-01&..."

    local generate_post_data=$(cat <<EOF
{
    "summary": "Card \"VS-Code_Session_Time_Notification\"",
    "themeColor": "0078D7",
    "title": "$Title",
    "sections": [
        {
            "activitySubtitle": "$DATE",
            "facts": [
                {
                    "name": "User:",
                    "value": "$userid"
                },
                {
                    "name": "VS-code session ID:",
                    "value": "$pid"
                }
            ],
            "text": "VS-Code sessions running for more than 48-hours."
        }
    ]
}
EOF
    )

    curl -s -o /dev/null -w "%{http_code}" -H "$header" --data "$generate_post_data" "$nav_slack_hook"
}

# Main script logic
output=$(ps -eo pid,etimes,user:20,%cpu,%mem,comm | grep -e vscode-session)

if [ -n "$output" ]; then
    while read -r line; do
        pid=$(echo "$line" | awk '{print $1}')
        etimes=$(echo "$line" | awk '{print $2}')
        userid=$(echo "$line" | awk '{print $3}')

        if [ "$etimes" -gt "$time_limit" ]; then
            echo "Alert triggered for session with PID $pid and user $userid"
            send_team_message "$pid" "$userid"
        fi
    done <<< "$output"
else
    echo "No vscode sessions found."
fi

echo "Script finished"
